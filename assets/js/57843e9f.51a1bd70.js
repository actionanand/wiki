"use strict";(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[2974],{132:(e,n,t)=>{t.d(n,{A:()=>s});t(96540);var l=t(74848);function s(e){let{children:n,color:t,highlight:s="bg",fontWeight:a="normal",textDecoration:r="none",fontStyle:i="normal",textAlign:o="left"}=e;return"fg"===s?(0,l.jsx)("span",{style:{color:t,fontWeight:a,textDecoration:r,fontStyle:i,textAlign:o},children:n}):"format"===s?(0,l.jsx)("div",{style:{textAlign:o,color:t,fontWeight:a,textDecoration:r,fontStyle:i},children:n}):"lightBg"===s?(0,l.jsx)("span",{style:{backgroundColor:t,borderRadius:"4px",color:"#4B0082",padding:"0.2rem",paddingTop:"0"},children:n}):(0,l.jsx)("span",{style:{backgroundColor:t,borderRadius:"4px",color:"#fff",padding:"0.2rem",paddingTop:"0"},children:n})}},60818:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>c});const l=JSON.parse('{"id":"Angular/angular-reusable-component","title":"Angular Reusable component","description":"ngTemplateOutlet is a structural directive in Angular that allows you to dynamically render a template at runtime. It is often used when you want to reuse templates or render different templates based on some condition.","source":"@site/docs/Angular/angular-reusable-component.mdx","sourceDirName":"Angular","slug":"/Angular/angular-reusable-component","permalink":"/wiki/docs/Angular/angular-reusable-component","draft":false,"unlisted":false,"editUrl":"https://github.com/actionanand/wiki/docs/Angular/angular-reusable-component.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"sidebar_label":"Angular Reusable component","title":"Angular Reusable component"},"sidebar":"tutorialSidebar","previous":{"title":"Know Your Angular - part 2","permalink":"/wiki/docs/Angular/know-your-angular-part2"},"next":{"title":"Content Projection","permalink":"/wiki/docs/Angular/content-projection"}}');var s=t(74848),a=t(28453);t(132);const r={sidebar_position:3,sidebar_label:"Angular Reusable component",title:"Angular Reusable component"},i=void 0,o={},c=[{value:"<strong>Basic Syntax</strong>",id:"basic-syntax",level:3},{value:"<strong>Example: Using <code>ngTemplateOutlet</code> and <code>ngTemplateOutletContext</code></strong>",id:"example-using-ngtemplateoutlet-and-ngtemplateoutletcontext",level:3},{value:"<strong>HTML Template</strong>",id:"html-template",level:4},{value:"<strong>Explanation</strong>",id:"explanation",level:4},{value:"<strong>Advanced Example: Using <code>ngTemplateOutlet</code> in a Table</strong>",id:"advanced-example-using-ngtemplateoutlet-in-a-table",level:3},{value:"<strong>HTML Template</strong>",id:"html-template-1",level:4},{value:"<strong>Component Class</strong>",id:"component-class",level:4},{value:"<strong>Explanation</strong>",id:"explanation-1",level:4},{value:"<strong>Key Points</strong>",id:"key-points",level:3}];function d(e){const n={code:"code",h3:"h3",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"ngTemplateOutlet"})," is a structural directive in Angular that allows you to dynamically render a template at runtime. It is often used when you want to reuse templates or render different templates based on some condition."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"ngTemplateOutletContext"})," is used to pass data (context) to the dynamically rendered template."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"basic-syntax",children:(0,s.jsx)(n.strong,{children:"Basic Syntax"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<ng-container [ngTemplateOutlet]="templateRef; context: contextObject"></ng-container>\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"templateRef"})}),": A reference to the template you want to render."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"contextObject"})}),": An object that provides data to the template."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"example-using-ngtemplateoutlet-and-ngtemplateoutletcontext",children:(0,s.jsxs)(n.strong,{children:["Example: Using ",(0,s.jsx)(n.code,{children:"ngTemplateOutlet"})," and ",(0,s.jsx)(n.code,{children:"ngTemplateOutletContext"})]})}),"\n",(0,s.jsx)(n.h4,{id:"html-template",children:(0,s.jsx)(n.strong,{children:"HTML Template"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:"<div>\n  <h3>Dynamic Template Example</h3>\n\n  \x3c!-- Render the template dynamically --\x3e\n  <ng-container [ngTemplateOutlet]=\"dynamicTemplate; context: { $implicit: 'Hello', name: 'Angular' }\"></ng-container>\n\n  \x3c!-- Define the template --\x3e\n  <ng-template #dynamicTemplate let-message let-name=\"name\">\n    <p>{{ message }}, {{ name }}!</p>\n  </ng-template>\n</div>\n"})}),"\n",(0,s.jsx)(n.h4,{id:"explanation",children:(0,s.jsx)(n.strong,{children:"Explanation"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"ngTemplateOutlet"})}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Dynamically renders the ",(0,s.jsx)(n.code,{children:"dynamicTemplate"})," template."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"ngTemplateOutletContext"})}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Passes the context object ",(0,s.jsx)(n.code,{children:"{ $implicit: 'Hello', name: 'Angular' }"})," to the template."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"$implicit"})," is a special key that allows you to pass a default value to the template."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Template Variables"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"let-message"}),": Binds the ",(0,s.jsx)(n.code,{children:"$implicit"})," value (",(0,s.jsx)(n.code,{children:"'Hello'"}),") to the ",(0,s.jsx)(n.code,{children:"message"})," variable."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:'let-name="name"'}),": Binds the ",(0,s.jsx)(n.code,{children:"name"})," property from the context object to the ",(0,s.jsx)(n.code,{children:"name"})," variable."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Output"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The template renders as:","\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:"<p>Hello, Angular!</p>\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"advanced-example-using-ngtemplateoutlet-in-a-table",children:(0,s.jsxs)(n.strong,{children:["Advanced Example: Using ",(0,s.jsx)(n.code,{children:"ngTemplateOutlet"})," in a Table"]})}),"\n",(0,s.jsx)(n.h4,{id:"html-template-1",children:(0,s.jsx)(n.strong,{children:"HTML Template"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<table mat-table [dataSource]="dataSource" class="mat-elevation-z8">\n  \x3c!-- Name Column --\x3e\n  <ng-container matColumnDef="name">\n    <th mat-header-cell *matHeaderCellDef>Name</th>\n    <td mat-cell *matCellDef="let element">\n      <ng-container [ngTemplateOutlet]="nameTemplate; context: { $implicit: element.name }"></ng-container>\n    </td>\n  </ng-container>\n\n  \x3c!-- Age Column --\x3e\n  <ng-container matColumnDef="age">\n    <th mat-header-cell *matHeaderCellDef>Age</th>\n    <td mat-cell *matCellDef="let element">\n      <ng-container [ngTemplateOutlet]="ageTemplate; context: { $implicit: element.age }"></ng-container>\n    </td>\n  </ng-container>\n\n  \x3c!-- Header and Row Definitions --\x3e\n  <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>\n  <tr mat-row *matRowDef="let row; columns: displayedColumns;"></tr>\n</table>\n\n\x3c!-- Templates --\x3e\n<ng-template #nameTemplate let-name>\n  <strong>{{ name }}</strong>\n</ng-template>\n\n<ng-template #ageTemplate let-age>\n  <span *ngIf="age >= 18; else minor">Adult</span>\n  <ng-template #minor>Minor</ng-template>\n</ng-template>\n'})}),"\n",(0,s.jsx)(n.h4,{id:"component-class",children:(0,s.jsx)(n.strong,{children:"Component Class"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  displayedColumns: string[] = ['name', 'age'];\n  dataSource = [\n    { name: 'John Doe', age: 25 },\n    { name: 'Jane Smith', age: 17 },\n    { name: 'Alice Johnson', age: 30 }\n  ];\n}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"explanation-1",children:(0,s.jsx)(n.strong,{children:"Explanation"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Dynamic Templates"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"nameTemplate"})," and ",(0,s.jsx)(n.code,{children:"ageTemplate"})," are defined as reusable templates."]}),"\n",(0,s.jsxs)(n.li,{children:["These templates are dynamically rendered using ",(0,s.jsx)(n.code,{children:"ngTemplateOutlet"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Context Passing"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"context"})," object is used to pass data (",(0,s.jsx)(n.code,{children:"name"})," and ",(0,s.jsx)(n.code,{children:"age"}),") to the templates."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Conditional Rendering"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"ageTemplate"})," uses an ",(0,s.jsx)(n.code,{children:"*ngIf"}),' directive to display "Adult" or "Minor" based on the age.']}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Output"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The table dynamically renders the ",(0,s.jsx)(n.code,{children:"name"})," and ",(0,s.jsx)(n.code,{children:"age"})," columns with custom templates."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"key-points",children:(0,s.jsx)(n.strong,{children:"Key Points"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"ngTemplateOutlet"})}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Dynamically renders a template."}),"\n",(0,s.jsx)(n.li,{children:"Useful for reusing templates or rendering templates conditionally."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"ngTemplateOutletContext"})}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Passes data to the dynamically rendered template."}),"\n",(0,s.jsxs)(n.li,{children:["Use ",(0,s.jsx)(n.code,{children:"$implicit"})," for default values or define custom keys."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Use Cases"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Dynamic content rendering."}),"\n",(0,s.jsx)(n.li,{children:"Custom templates in tables or lists."}),"\n",(0,s.jsx)(n.li,{children:"Reusable templates for different components."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["This approach is especially useful in Angular Material tables (",(0,s.jsx)(n.code,{children:"mat-table"}),") for creating custom column templates."]})]})}function m(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>i});var l=t(96540);const s={},a=l.createContext(s);function r(e){const n=l.useContext(a);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),l.createElement(a.Provider,{value:n},e.children)}}}]);