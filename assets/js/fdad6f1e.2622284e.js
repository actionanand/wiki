"use strict";(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[4488],{8424:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"computer-jargon","metadata":{"permalink":"/wiki/blog/computer-jargon","editUrl":"https://github.com/actionanand/wiki/blog/2024-02-29-computer-jargon.md","source":"@site/blog/2024-02-29-computer-jargon.md","title":"The Necessary IT Jargon Buster","description":"ECMA International  - An organization that creates standards for technologies.","date":"2024-02-29T00:00:00.000Z","formattedDate":"February 29, 2024","tags":[{"label":"acronym","permalink":"/wiki/blog/tags/acronym"},{"label":"abbreviation","permalink":"/wiki/blog/tags/abbreviation"},{"label":"glossary","permalink":"/wiki/blog/tags/glossary"}],"readingTime":1.7,"hasTruncateMarker":true,"authors":[{"name":"Anand Raja","title":"Software Developer","url":"https://github.com/actionanand","imageURL":"https://github.com/actionanand.png","key":"anand"}],"frontMatter":{"slug":"computer-jargon","title":"The Necessary IT Jargon Buster","authors":"anand","tags":["acronym","abbreviation","glossary"]},"unlisted":false,"nextItem":{"title":"Kuruntokai - Verse 02","permalink":"/wiki/blog/kuruntokai-verse-2"}},"content":"import Highlight from \'@site/src/components/Highlight\';\\n\\n<Highlight color=\'#800031\' highlight=\'fg\' fontWeight=\'bold\'> ECMA International</Highlight>  - An organization that creates standards for technologies.\\n\\n:::note[ECMAScript]\\nThe specification defined in `ECMA-262` for creating a general purpose scripting language.<br></br>\\n<Highlight color=\'#C0C0C0\'>Synonym</Highlight> - ECMAScript specification\\n:::\\n\\n<Highlight color=\'#800031\' highlight=\'fg\' fontWeight=\'bold\'> ECMA-262</Highlight>  - This is a standard published by <Highlight color=\'#1877F2\' highlight=\'fg\' fontStyle=\'italic\'>Ecma International</Highlight>. It contains the specification for a general purpose scripting language. While ECMA-262 is the name of the standard, it represents the scripting language specification ECMAScript. ECMAScript provides the rules, details, and guidelines that a scripting language must observe to be considered ECMAScript compliant.\\n\x3c!--truncate--\x3e\\n\\n<Highlight color=\'#800031\' highlight=\'fg\' fontWeight=\'bold\'> JavaScript</Highlight> - A general purpose scripting language that conforms to the ECMAScript specification.\\n\\nBy reading the [ECMAScript](https://ecma-international.org/publications-and-standards/standards/ecma-262/) specification, you learn <Highlight color=\'#1877F2\' highlight=\'fg\' fontStyle=\'italic\'>how to create a scripting language.</Highlight> <br></br> By reading the [JavaScript](https://developer.mozilla.org/en-US/docs/Web/JavaScript) documentation, you learn <Highlight color=\'#1877F2\' highlight=\'fg\' fontStyle=\'italic\'>how to use a scripting language.</Highlight>\\n\\n<Highlight color=\'#800031\' highlight=\'fg\' fontWeight=\'bold\'> JavaScript engine</Highlight> - A program or interpreter that understands and executes JavaScript code.\\n\\n<Highlight color=\'#800031\' highlight=\'fg\' fontWeight=\'bold\'> JavaScript runtime</Highlight> - The environment in which the JavaScript code runs and is interpreted by a JavaScript engine. The runtime provides the host objects that JavaScript can operate on and work with.\\n\\n<Highlight color=\'#C0C0C0\'>Synonym</Highlight> - Host environment\\n\\n<Highlight color=\'#800031\' highlight=\'fg\' fontWeight=\'bold\'> ECMAScript 6</Highlight> - It is the <Highlight color=\'#1877F2\' highlight=\'fg\' fontStyle=\'italic\'>sixth edition of the **ECMA-262** standard</Highlight>, and features major changes and improvements to the ECMAScript specification.\\n\\n<Highlight color=\'#C0C0C0\'>Synonym</Highlight> - ES6, ES2015, and ECMAScript 2015\\n\\n<Highlight color=\'#800031\' highlight=\'fg\' fontWeight=\'bold\'>Babel</Highlight> - A transpiler that can convert <Highlight color=\'#1877F2\' highlight=\'fg\' fontStyle=\'italic\'>ES6 code to ES5 code</Highlight>.\\n\\n:::info[One more interesting tidbit]\\nA confusing bit of history is that JavaScript was created in 1996. It was then submitted to Ecma International in 1997 for standardization, which resulted in ECMAScript. At the same time, because JavaScript conformed to the ECMAScript specification, JavaScript is an example of an ECMAScript implementation.\\n\\nThat leaves us with this fun fact: ***ECMAScript is based on JavaScript***, and ***JavaScript is based on ECMAScript***.\\n:::\\n\\n### Resources\\n\\n1. [What\u2019s the difference between JavaScript and ECMAScript?](https://www.freecodecamp.org/news/whats-the-difference-between-javascript-and-ecmascript-cba48c73a2b5/)"},{"id":"kuruntokai-verse-2","metadata":{"permalink":"/wiki/blog/kuruntokai-verse-2","editUrl":"https://github.com/actionanand/wiki/blog/2024-02-19-kuruntokai-verse-2/index.mdx","source":"@site/blog/2024-02-19-kuruntokai-verse-2/index.mdx","title":"Kuruntokai - Verse 02","description":"\u0b95\u0bca\u0b99\u0bcd\u0b95\u0bc1 \u0ba4\u0bc7\u0bb0\u0bcd \u0bb5\u0bbe\u0bb4\u0bcd\u0b95\u0bcd\u0b95\u0bc8","date":"2024-02-19T00:00:00.000Z","formattedDate":"February 19, 2024","tags":[{"label":"tamil","permalink":"/wiki/blog/tags/tamil"},{"label":"tamizh","permalink":"/wiki/blog/tags/tamizh"},{"label":"poem","permalink":"/wiki/blog/tags/poem"}],"readingTime":2.46,"hasTruncateMarker":true,"authors":[{"name":"Anand Raja","title":"Software Developer","url":"https://github.com/actionanand","imageURL":"https://github.com/actionanand.png","key":"anand"}],"frontMatter":{"slug":"kuruntokai-verse-2","title":"Kuruntokai - Verse 02","authors":"anand","tags":["tamil","tamizh","poem"]},"unlisted":false,"prevItem":{"title":"The Necessary IT Jargon Buster","permalink":"/wiki/blog/computer-jargon"},"nextItem":{"title":"Browser Engines - Digest","permalink":"/wiki/blog/browser-engines"}},"content":"import Highlight from \'@site/src/components/Highlight\';\\n\\n### <Highlight color=\'#800031\' highlight=\'fg\' fontWeight=\'bold\'> \u0b95\u0bca\u0b99\u0bcd\u0b95\u0bc1 \u0ba4\u0bc7\u0bb0\u0bcd \u0bb5\u0bbe\u0bb4\u0bcd\u0b95\u0bcd\u0b95\u0bc8 </Highlight>\\n\\n<Highlight color=\'#004080\' highlight=\'fg\' fontWeight=\'bold\'> 2. \u0b95\u0bc1\u0bb1\u0bbf\u0b9e\u0bcd\u0b9a\u0bbf </Highlight> <Highlight color=\'#004080\' highlight=\'fg\'> - \u0ba4\u0bb2\u0bc8\u0bb5\u0ba9\u0bcd \u0b95\u0bc2\u0bb1\u0bcd\u0bb1\u0bc1 </Highlight>\\n\\n<Highlight color=\'#006666\' highlight=\'fg\' textAlign=\'center\'>\\n  \u0b95\u0bca\u0b99\u0bcd\u0b95\u0bc1 \u0ba4\u0bc7\u0bb0\u0bcd \u0bb5\u0bbe\u0bb4\u0bcd\u0b95\u0bcd\u0b95\u0bc8 \u0b85\u0b9e\u0bcd\u0b9a\u0bbf\u0bb1\u0bc8\u0ba4\u0bcd \u0ba4\u0bc1\u0bae\u0bcd\u0baa\u0bbf! <br></br>\\n  \u0b95\u0bbe\u0bae\u0bae\u0bcd \u0b9a\u0bc6\u0baa\u0bcd\u0baa\u0bbe\u0ba4\u0bc1, \u0b95\u0ba3\u0bcd\u0b9f\u0ba4\u0bc1 \u0bae\u0bca\u0bb4\u0bbf\u0bae\u0bcb: <br></br>\\n  \u0baa\u0baf\u0bbf\u0bb2\u0bbf\u0baf\u0ba4\u0bc1 \u0b95\u0bc6\u0bb4\u0bc0\u0b87\u0baf \u0ba8\u0b9f\u0bcd\u0baa\u0bbf\u0ba9\u0bcd, \u0bae\u0baf\u0bbf\u0bb2\u0bcd \u0b87\u0baf\u0bb2\u0bcd, <br></br>\\n  \u0b9a\u0bc6\u0bb1\u0bbf \u0b8e\u0baf\u0bbf\u0bb1\u0bcd\u0bb1\u0bc1, \u0b85\u0bb0\u0bbf\u0bb5\u0bc8 \u0b95\u0bc2\u0ba8\u0bcd\u0ba4\u0bb2\u0bbf\u0ba9\u0bcd <br></br>\\n  \u0ba8\u0bb1\u0bbf\u0baf\u0bb5\u0bc1\u0bae\u0bcd \u0b89\u0bb3\u0bb5\u0bcb, \u0ba8\u0bc0 \u0b85\u0bb1\u0bbf\u0baf\u0bc1\u0bae\u0bcd \u0baa\u0bc2\u0bb5\u0bc7? <br></br>\\n</Highlight>\\n\\n<Highlight color=\'#531A02\' highlight=\'fg\'>\\n  \u0b87\u0baf\u0bb1\u0bcd\u0b95\u0bc8\u0baa\u0bcd \u0baa\u0bc1\u0ba3\u0bb0\u0bcd\u0b9a\u0bcd\u0b9a\u0bbf \u0baa\u0bc1\u0ba3\u0bb0\u0bcd\u0ba8\u0bcd\u0ba4\u0bb5\u0bb4\u0bbf, \u0ba4\u0bb2\u0bc8\u0bae\u0b95\u0bb3\u0bc8 \u0b87\u0baf\u0bb1\u0bcd\u0b95\u0bc8\u0baa\u0bcd \u0baa\u0bc1\u0ba3\u0bb0\u0bcd\u0b9a\u0bcd\u0b9a\u0bbf\u0b95\u0bcd\u0b95\u0ba3\u0bcd \u0b87\u0b9f\u0bc8\u0baf\u0bc0\u0b9f\u0bc1\u0baa\u0b9f\u0bcd\u0b9f\u0bc1 \u0ba8\u0bbf\u0ba9\u0bcd\u0bb1 \\n  \u0ba4\u0bb2\u0bc8\u0bae\u0b95\u0ba9\u0bcd, \u0ba8\u0bbe\u0ba3\u0bbf\u0ba9\u0bcd \u0ba8\u0bc0\u0b95\u0bcd\u0b95\u0bc1\u0ba4\u0bb1\u0bcd\u0baa\u0bca\u0bb0\u0bc1\u0b9f\u0bcd\u0b9f\u0bc1, \u0bae\u0bc6\u0baf\u0bcd \u0ba4\u0bca\u0b9f\u0bcd\u0b9f\u0bc1\u0baa\u0bcd \u0baa\u0baf\u0bbf\u0bb1\u0bb2\u0bcd \u0bae\u0bc1\u0ba4\u0bb2\u0bbe\u0baf\u0bbf\u0ba9 \u0b85\u0bb5\u0bb3\u0bcd\u0bae\u0bbe\u0b9f\u0bcd\u0b9f\u0bc1 \u0ba8\u0bbf\u0b95\u0bb4\u0bcd\u0ba4\u0bcd\u0ba4\u0bbf\u0b95\\n</Highlight>\\n\\n<Highlight color=\'#351C75\' highlight=\'format\' textAlign=\'right\'> \u0b95\u0bc1\u0bb1\u0bc1\u0ba8\u0bcd\u0ba4\u0bca\u0b95\u0bc8 - 02 </Highlight>\\n<Highlight color=\'#351C75\' highlight=\'format\' textAlign=\'right\'> \u0baa\u0bbe\u0b9f\u0bbf\u0baf\u0bb5\u0bb0\u0bcd - \u0b87\u0bb1\u0bc8\u0baf\u0ba9\u0bbe\u0bb0\u0bcd </Highlight>\\n\\n\x3c!--truncate--\x3e\\n\\n<br></br>\\n<Highlight color=\'#25c2a0\'>\u0b95\u0bb0\u0bc1\u0ba4\u0bcd\u0ba4\u0bc1:</Highlight> \u0b87\u0baf\u0bb1\u0bcd\u0b95\u0bc8\u0baa\u0bcd \u0baa\u0bc1\u0ba3\u0bb0\u0bcd\u0b9a\u0bcd\u0b9a\u0bbf\u0b95\u0bcd\u0b95\u0bc1\u0baa\u0bcd (\u0ba4\u0bb2\u0bc8\u0bb5\u0bbf\u0baf\u0bc8\u0ba4\u0bcd \u0ba4\u0bb2\u0bc8\u0bb5\u0ba9\u0bcd \u0b87\u0baf\u0bb2\u0bcd\u0baa\u0bbe\u0b95\u0baa\u0bcd \u0baa\u0bbe\u0bb0\u0bcd\u0ba4\u0bcd\u0ba4\u0bc1\u0b95\u0bcd \u0b95\u0bbe\u0ba4\u0bb2\u0bcd \u0b95\u0bca\u0bb3\u0bcd\u0bb3\u0bc1\u0ba4\u0bb2\u0bcd) \u0baa\u0bbf\u0ba9\u0bcd\u0ba9\u0bb0\u0bcd \u0ba4\u0bb2\u0bc8\u0bb5\u0bbf\u0baf\u0bc8\u0b9a\u0bcd \u0b9a\u0ba8\u0bcd\u0ba4\u0bbf\u0b95\u0bcd\u0b95\u0bc1\u0bae\u0bcd \u0ba4\u0bb2\u0bc8\u0bb5\u0ba9\u0bcd \u0b85\u0bb5\u0bb3\u0bbf\u0ba9\u0bcd \u0ba8\u0bbe\u0ba3\u0ba4\u0bcd\u0ba4\u0bc8 \u0ba8\u0bc0\u0b95\u0bcd\u0b95\u0bc1\u0ba4\u0bb2\u0bcd \u0baa\u0bca\u0bb0\u0bc1\u0b9f\u0bcd\u0b9f\u0bc1, \u0bae\u0bc6\u0baf\u0bcd\u0ba4\u0bca\u0b9f\u0bcd\u0b9f\u0bc1\u0baa\u0bcd \u0baa\u0baf\u0bbf\u0ba9\u0bcd\u0bb1\u0bc1 (\u0ba4\u0bb2\u0bc8\u0bb5\u0bbf\u0baf\u0bbf\u0ba9\u0bcd \u0b89\u0b9f\u0bb2\u0bcd \u0ba4\u0bca\u0b9f\u0bcd\u0b9f\u0bc1 \u0b89\u0bb0\u0bc8\u0baf\u0bbe\u0b9f\u0bb2\u0bcd) \u0ba8\u0bb2\u0bae\u0bcd \u0baa\u0bbe\u0bb0\u0bbe\u0b9f\u0bcd\u0b9f\u0bc1\u0ba4\u0bb2\u0bcd ( \u0ba4\u0bb2\u0bc8\u0bb5\u0bbf\u0baf\u0bbf\u0ba9\u0bcd \u0b85\u0bb4\u0b95\u0bc1 \u0ba8\u0bb2\u0ba4\u0bcd\u0ba4\u0bc8\u0baa\u0bcd \u0baa\u0bbe\u0b9f\u0bc1\u0ba4\u0bb2\u0bcd)\\n\\n\u0ba4\u0bb2\u0bc8\u0bb5\u0bbf \u0ba8\u0bbe\u0ba3\u0ba4\u0bcd\u0ba4\u0bcb\u0b9f\u0bc1 \u0b87\u0bb0\u0bc1\u0baa\u0bcd\u0baa\u0ba4\u0bc8 \u0b89\u0ba3\u0bb0\u0bcd\u0ba8\u0bcd\u0ba4 \u0ba4\u0bb2\u0bc8\u0bb5\u0ba9\u0bcd \u0b85\u0bb5\u0bb3\u0bbf\u0ba9\u0bcd \u0ba8\u0bbe\u0ba3\u0ba4\u0bcd\u0ba4\u0bc8 \u0ba8\u0bc0\u0b95\u0bcd\u0b95 \u0ba4\u0bc1\u0bae\u0bcd\u0baa\u0bbf\u0baf\u0bc8\u0baa\u0bcd \u0baa\u0bbe\u0bb0\u0bcd\u0ba4\u0bcd\u0ba4\u0bc1\u0baa\u0bcd \u0baa\u0bc7\u0b9a\u0bc1\u0b95\u0bbf\u0bb1\u0bbe\u0ba9\u0bcd.\\n\u0baa\u0bc2\u0b95\u0bcd\u0b95\u0bb3\u0bbf\u0bb2\u0bcd \u0b89\u0bb3\u0bcd\u0bb3 \u0bae\u0ba3\u0ba4\u0bcd\u0ba4\u0bc8 \u0b86\u0bb0\u0bbe\u0baf\u0bcd\u0ba8\u0bcd\u0ba4\u0bc1 \u0ba4\u0bc7\u0ba9\u0bc8 \u0b89\u0ba3\u0bcd\u0ba3\u0bc1\u0b95\u0bbf\u0ba9\u0bcd\u0bb1 \u0bb5\u0bbe\u0bb4\u0bcd\u0b95\u0bc8\u0baf\u0bbf\u0ba9\u0bc8\u0baf\u0bc1\u0bae\u0bcd, \u0b85\u0b95\u0ba4\u0bcd\u0ba4\u0bc7 \u0b9a\u0bbf\u0bb1\u0b95\u0bc1\u0b95\u0bb3\u0bc8\u0baf\u0bc1\u0bae\u0bcd \u0b95\u0bca\u0ba3\u0bcd\u0b9f \u0bb5\u0ba3\u0bcd\u0b9f\u0bc7!\\n\\n\u0b8e\u0ba9\u0b95\u0bcd\u0b95\u0bc1 \u0b87\u0ba9\u0bcd\u0baa\u0bae\u0bcd \u0ba4\u0bb0\u0bc1\u0bb5\u0ba4\u0bb1\u0bcd\u0b95\u0bbe\u0b95\u0baa\u0bcd \u0baa\u0bca\u0baf\u0bcd \u0b95\u0bc2\u0bb1\u0bbe\u0bae\u0bb2\u0bcd, \u0ba8\u0bc0 \u0b89\u0ba3\u0bcd\u0bae\u0bc8\u0baf\u0bc6\u0ba9 \u0b85\u0bb1\u0bbf\u0ba8\u0bcd\u0ba4 \u0b92\u0ba9\u0bcd\u0bb1\u0bc8 \u0b8e\u0ba9\u0bcd \u0b95\u0bc7\u0bb3\u0bcd\u0bb5\u0bbf\u0b95\u0bcd\u0b95\u0bc1 \u0bb5\u0bbf\u0b9f\u0bc8\u0baf\u0bbe\u0b95\u0ba4\u0bcd \u0ba4\u0bb0\u0bc1\u0bb5\u0bbe\u0baf\u0bbe\u0b95,\\n\\n\u0baa\u0bb4\u0b95\u0bc1\u0ba4\u0bb1\u0bcd\u0b95\u0bc1 \u0b87\u0ba9\u0bbf\u0baf, \u0bae\u0baf\u0bbf\u0bb2\u0bc8\u0baa\u0bcd \u0baa\u0bcb\u0ba9\u0bcd\u0bb1 \u0b9a\u0bbe\u0baf\u0bb2\u0bc8\u0baf\u0bc1\u0bae\u0bcd, \u0b9a\u0bc6\u0bb1\u0bbf\u0ba8\u0bcd\u0ba4 \u0baa\u0bb1\u0bcd\u0b95\u0bb3\u0bc8\u0baf\u0bc1\u0bae\u0bcd \u0b89\u0b9f\u0bc8\u0baf \u0b87\u0bb5\u0bcd\u0bb5\u0bb0\u0bbf\u0bb5\u0bc8\u0baf\u0bbf\u0ba9\u0bcd \u0b95\u0bc2\u0ba8\u0bcd\u0ba4\u0bb2\u0bc8\u0baa\u0bcd \u0baa\u0bcb\u0ba9\u0bcd\u0bb1 \u0bae\u0ba3\u0bae\u0bcd \u0ba8\u0bc0 \u0b85\u0bb1\u0bbf\u0ba8\u0bcd\u0ba4 \u0bae\u0bb2\u0bb0\u0bcd\u0b95\u0bb3\u0bc1\u0b95\u0bcd\u0b95\u0bc1 \u0b89\u0ba3\u0bcd\u0b9f\u0bbe..?\\n\\n### \u0b9a\u0bca\u0bb1\u0bcd\u0b95\u0bb3\u0b9e\u0bcd\u0b9a\u0bbf\u0baf\u0bae\u0bcd\\n\\n**\u0b95\u0bca\u0b99\u0bcd\u0b95\u0bc1** - \u0baa\u0bc2\u0bb5\u0bbf\u0ba9\u0bcd \u0bae\u0b95\u0bb0\u0ba8\u0bcd\u0ba4\u0bae\u0bcd <br></br>\\n**\u0ba4\u0bc7\u0bb0\u0bcd** - \u0ba4\u0bc7\u0bb0\u0bcd\u0ba8\u0bc6\u0b9f\u0bc1\u0b95\u0bcd\u0b95\u0bc1\u0bae\u0bcd <br></br>\\n**\u0bb5\u0bbe\u0bb4\u0bcd\u0b95\u0bcd\u0b95\u0bc8** - \u0bb5\u0bbe\u0bb4\u0bc1\u0bae\u0bcd <br></br>\\n**\u0b85\u0b9e\u0bcd\u0b9a\u0bbf\u0bb1\u0bc8\u0ba4\u0bcd\u0ba4\u0bc1\u0bae\u0bcd\u0baa\u0bbf** - \u0b89\u0bb3\u0bcd\u0bb3\u0bc7 \u0b9a\u0bbf\u0bb1\u0b95\u0bc1\u0b95\u0bb3\u0bc8 \u0b89\u0b9f\u0bc8\u0baf \u0ba4\u0bc1\u0bae\u0bcd\u0baa\u0bbf(\u0bb5\u0ba3\u0bcd\u0b9f\u0bc1) - (**\u0b85\u0bae\u0bcd \u0b9a\u0bbf\u0bb1\u0bc8** - \u0b85\u0bb4\u0b95\u0bbf\u0baf \u0b9a\u0bbf\u0bb1\u0b95\u0bc1\u0b95\u0bb3\u0bcd) <br></br>\\n**\u0b95\u0bbe\u0bae\u0bae\u0bcd \u0b9a\u0bc6\u0baa\u0bcd\u0baa\u0bbe\u0ba4\u0bc1** - \u0ba8\u0bbe\u0ba9\u0bcd \u0bb5\u0bbf\u0bb0\u0bc1\u0bae\u0bcd\u0baa\u0bbf\u0baf\u0ba4\u0bc8\u0b9a\u0bcd \u0b9a\u0bca\u0bb2\u0bcd\u0bb2\u0bbe\u0ba4\u0bc1 <br></br>\\n**\u0b95\u0ba3\u0bcd\u0b9f\u0ba4\u0bc1 \u0bae\u0bca\u0bb4\u0bbf\u0bae\u0bcb** - \u0ba8\u0bc0 \u0b95\u0ba3\u0bcd\u0b9f\u0bb1\u0bbf\u0ba8\u0bcd\u0ba4\u0ba4\u0bc8\u0b95\u0bcd \u0b95\u0bc2\u0bb1\u0bc1 <br></br>\\n**\u0baa\u0baf\u0bb2\u0bbf\u0baf\u0ba4\u0bc1 \u0b95\u0bc6\u0bb4\u0bc0\u0baf \u0ba8\u0b9f\u0bcd\u0baa\u0bbf\u0ba9\u0bcd** - \u0baa\u0bb2 \u0baa\u0bbf\u0bb1\u0bb5\u0bbf\u0b95\u0bb3\u0bbf\u0bb2\u0bc1\u0bae\u0bcd \u0ba8\u0b9f\u0bcd\u0baa\u0bc1\u0b9f\u0ba9\u0bcd \u0bb5\u0bbf\u0bb3\u0b99\u0bcd\u0b95\u0bc1\u0bae\u0bcd(\u0b95\u0bc6\u0bb4\u0bbf-\u0ba8\u0b9f\u0bcd\u0baa\u0bc1) <br></br>\\n**\u0bae\u0baf\u0bbf\u0bb2\u0bbf\u0baf\u0bb2\u0bcd** - \u0bae\u0baf\u0bbf\u0bb2\u0bcd \u0baa\u0bcb\u0ba9\u0bcd\u0bb1 <br></br>\\n**\u0b9a\u0bc6\u0bb1\u0bbf\u0baf\u0bbf\u0baf\u0bc6\u0bb1\u0bcd \u0bb1\u0bb0\u0bbf\u0bb5\u0bc8** - \u0b9a\u0bc6\u0bb1\u0bbf\u0bb5\u0bbe\u0ba9 \u0baa\u0bb1\u0bcd\u0b95\u0bb3\u0bc8\u0b95\u0bcd(\u0b8e\u0baf\u0bbf\u0bb1\u0bc1) \u0b95\u0bca\u0ba3\u0bcd\u0b9f \u0baa\u0bc6\u0ba3\u0bcd <br></br>\\n**\u0b95\u0bc2\u0ba8\u0bcd\u0ba4\u0bb2\u0bbf\u0ba9\u0bcd** - \u0b95\u0bc2\u0ba8\u0bcd\u0ba4\u0bb2\u0bc8 \u0bb5\u0bbf\u0b9f <br></br>\\n**\u0ba8\u0bb1\u0bbf\u0baf\u0bb5\u0bc1\u0bae\u0bcd \u0b89\u0bb3\u0bb5\u0bcb** - \u0bae\u0ba3\u0bae\u0bbf\u0b95\u0bc1\u0ba8\u0bcd\u0ba4 \u0b8f\u0ba4\u0bc7\u0ba9\u0bc1\u0bae\u0bcd \u0b89\u0bb3\u0bcd\u0bb3\u0ba4\u0bcb <br></br>\\n**\u0ba8\u0bc0 \u0b85\u0bb1\u0bbf\u0baf\u0bc1\u0bae\u0bcd \u0baa\u0bc2\u0bb5\u0bc7** - \u0ba8\u0bc0 \u0b85\u0bb1\u0bbf\u0ba8\u0bcd\u0ba4 \u0baa\u0bc2\u0b95\u0bcd\u0b95\u0bb3\u0bbf\u0b9f\u0bae\u0bcd <br></br>\\n\\n\u0ba4\u0bbf\u0bb0\u0bc1\u0bb5\u0bbf\u0bb3\u0bc8\u0baf\u0bbe\u0b9f\u0bb1\u0bcd \u0baa\u0bc1\u0bb0\u0bbe\u0ba3\u0ba4\u0bcd\u0ba4\u0bbf\u0bb2\u0bc1\u0bae\u0bcd(<Highlight color=\'#25c2a0\' highlight=\'fg\'>\u0ba4\u0bb0\u0bc1\u0bae\u0bbf\u0b95\u0bcd\u0b95\u0bc1\u0baa\u0bcd \u0baa\u0bca\u0bb1\u0bcd\u0b95\u0bbf\u0bb4\u0bbf \u0b85\u0bb3\u0bbf\u0ba4\u0bcd\u0ba4 \u0baa\u0b9f\u0bb2\u0bae\u0bcd</Highlight>) \u0b87\u0ba8\u0bcd\u0ba4\u0baa\u0bcd \u0baa\u0bbe\u0b9f\u0bb2\u0bcd \u0bae\u0bc7\u0bb1\u0bcd\u0b95\u0bcb\u0bb3\u0bcd \u0b95\u0bbe\u0b9f\u0bcd\u0b9f\u0baa\u0bcd\u0baa\u0b9f\u0bc1\u0b95\u0bbf\u0bb1\u0ba4\u0bc1. \u0b9a\u0bc6\u0ba3\u0bcd\u0baa\u0b95\u0baa\u0bcd \u0baa\u0bbe\u0ba3\u0bcd\u0b9f\u0bbf\u0baf\u0ba9\u0bc1\u0b95\u0bcd\u0b95\u0bc1 \u0b8f\u0bb1\u0bcd\u0baa\u0b9f\u0bcd\u0b9f \u0b90\u0baf\u0ba4\u0bcd\u0ba4\u0bc8\u0baa\u0bcd \u0baa\u0bcb\u0b95\u0bcd\u0b95 \u0b87\u0bb1\u0bc8\u0bb5\u0ba9\u0bcd \u0ba4\u0bb0\u0bc1\u0bae\u0bbf \u0bae\u0bc2\u0bb2\u0bae\u0bcd \u0b95\u0bca\u0b9f\u0bc1\u0ba4\u0bcd\u0ba4\u0ba9\u0bc1\u0baa\u0bcd\u0baa\u0bbf\u0baf \u0baa\u0bbe\u0b9f\u0bb2\u0bcd.\\n\\n![chicken or egg](./smell-in-girls-hair.jpg)\\n\\n(\u0ba8\u0b95\u0bcd\u0b95\u0bc0\u0bb0\u0bb0\u0bc1\u0b95\u0bcd\u0b95\u0bc1\u0bae\u0bcd \u0b87\u0bb1\u0bc8\u0bb5\u0ba9\u0bc1\u0b95\u0bcd\u0b95\u0bc1\u0bae\u0bcd \u0b87\u0b9f\u0bc8\u0baf\u0bbe\u0ba9 \u0b89\u0bb0\u0bc8\u0baf\u0bbe\u0b9f\u0bb2\u0bbf\u0ba9\u0bcd \u0b9a\u0bbf\u0bb1\u0bc1\u0baa\u0b95\u0bc1\u0ba4\u0bbf  \u0b95\u0bc0\u0bb4\u0bcd\u0bb5\u0bb0\u0bc1\u0bae\u0bbe\u0bb1\u0bc1)\\n\\n\u0baa\u0bbe\u0ba3\u0bcd\u0b9f\u0bbf\u0baf\u0ba9\u0bcd \u0b85\u0bb5\u0bc8\u0baf\u0bbf\u0bb2\u0bcd \u2018\u0b95\u0bca\u0b99\u0bcd\u0b95\u0bc1\u0ba4\u0bc7\u0bb0\u0bcd \u0bb5\u0bbe\u0bb4\u0bcd\u0b95\u0bcd\u0b95\u0bc8\u2019 \u0b8e\u0ba9\u0bcd\u0ba9\u0bc1\u0bae\u0bcd \u0b9a\u0bc6\u0baf\u0bcd\u0baf\u0bc1\u0bb3\u0bbf\u0ba9\u0bcd \u0baa\u0bca\u0bb0\u0bc1\u0bb3\u0bcd \u0b95\u0bc1\u0bb1\u0bbf\u0ba4\u0bcd\u0ba4\u0bc1\u0b9a\u0bcd \u0b9a\u0b99\u0bcd\u0b95\u0baa\u0bcd \u0baa\u0bc1\u0bb2\u0bb5\u0bb0\u0bbe\u0b95 \u0bb5\u0ba8\u0bcd\u0ba4 \u0b9a\u0bbf\u0bb5\u0baa\u0bc6\u0bb0\u0bc1\u0bae\u0bbe\u0ba9\u0bc1\u0b95\u0bcd\u0b95\u0bc1\u0bae\u0bcd, \u0ba8\u0b95\u0bcd\u0b95\u0bc0\u0bb0\u0bb0\u0bcd\u0b95\u0bcd\u0b95\u0bc1\u0bae\u0bcd \u0b92\u0bb0\u0bc1 \u0bb5\u0bbe\u0ba4\u0bae\u0bcd \u0ba8\u0bbf\u0b95\u0bb4\u0bcd\u0ba8\u0bcd\u0ba4\u0ba4\u0bc1. \u0b85\u0baa\u0bcd\u0baa\u0bcb\u0ba4\u0bc1 \u0b9a\u0bbf\u0bb5\u0baa\u0bc6\u0bb0\u0bc1\u0bae\u0bbe\u0ba9\u0bcd \u0b95\u0bc2\u0bb1\u0bbf\u0baf\u0ba4\u0bbe\u0b95 \u0bb5\u0bb0\u0bc1\u0bae\u0bcd \u0bb5\u0bc6\u0ba3\u0bcd\u0baa\u0bbe:\\n\\n<Highlight color=\'#006666\' highlight=\'fg\' textAlign=\'center\'>\\n  \u0b85\u0b99\u0bcd\u0b95\u0b99\u0bcd \u0b95\u0bc1\u0bb2\u0bc1\u0b99\u0bcd\u0b95 \u0b85\u0bb0\u0bbf\u0bb5\u0bbe\u0bb3\u0bbf\u0bb2\u0bcd \u0ba8\u0bc6\u0baf\u0bcd\u0ba4\u0b9f\u0bb5\u0bbf\u0baa\u0bcd <br></br>\\n  \u0baa\u0b99\u0bcd\u0b95\u0bae\u0bcd \u0baa\u0b9f\u0b87\u0bb0\u0ba3\u0bcd\u0b9f\u0bc1 \u0b95\u0bbe\u0bb2\u0bcd\u0baa\u0bb0\u0baa\u0bcd\u0baa\u0bbf\u0b9a\u0bcd - \u0b9a\u0b99\u0bcd\u0b95\u0bc8\u0b95\u0bcd <br></br>\\n  \u0b95\u0bc0\u0bb0\u0bcd\u0b95\u0bc0\u0bb0\u0bcd \u0b8e\u0ba9 \u0b85\u0bb1\u0bc1\u0b95\u0bcd\u0b95\u0bc1\u0bae\u0bcd \u0b95\u0bc0\u0bb0\u0ba9\u0bcb \u0b8e\u0ba9\u0bcd\u0b95\u0bb5\u0bbf\u0baf\u0bc8 <br></br>\\n  \u0b86\u0bb0\u0bbe\u0baf\u0bcd\u0ba8\u0bcd\u0ba4\u0bc1 \u0b9a\u0bca\u0bb2\u0bcd\u0bb2 \u0ba4\u0b95\u0bcd\u0b95\u0bb5\u0ba9\u0bcd <br></br>\\n</Highlight>\\n\\n\u0b87\u0ba4\u0bb1\u0bcd\u0b95\u0bc1 \u0ba8\u0b95\u0bcd\u0b95\u0bc0\u0bb0\u0bb0\u0bcd \u0baa\u0bbf\u0ba9\u0bcd\u0bb5\u0bb0\u0bc1\u0bae\u0bcd \u0b9a\u0bc6\u0baf\u0bcd\u0baf\u0bc1\u0bb3\u0bbe\u0bb2\u0bcd \u0bb5\u0bbf\u0b9f\u0bc8\u0baf\u0bbf\u0bb1\u0bc1\u0ba4\u0bcd\u0ba4\u0bbe\u0bb0\u0bcd.\\n\\n<Highlight color=\'#006666\' highlight=\'fg\' textAlign=\'center\'>\\n  \u0b9a\u0b99\u0bcd\u0b95\u0bb1\u0bc1\u0baa\u0bcd\u0baa \u0ba4\u0bc6\u0b99\u0bcd\u0b95\u0bb3\u0bcd\u0b95\u0bc1\u0bb2\u0bae\u0bcd \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0ba9\u0bbe\u0bb0\u0bcd\u0b95\u0bcd\u0b95\u0bc1 \u0b8f\u0ba4\u0bc1\u0b95\u0bc1\u0bb2\u0bae\u0bcd <br></br>\\n  \u0baa\u0b99\u0bcd\u0b95\u0bae\u0bc1\u0bb1\u0b9a\u0bcd \u0b9a\u0bca\u0ba9\u0bcd\u0ba9\u0bbe\u0bb2\u0bcd \u0baa\u0bb4\u0bc1\u0ba4\u0bbe\u0bae\u0bcb - \u0b9a\u0b99\u0bcd\u0b95\u0bc8 <br></br>\\n  \u0b85\u0bb0\u0bbf\u0ba8\u0bcd\u0ba4\u0bc1\u0ba3\u0bcd\u0b9f\u0bc1 \u0bb5\u0bbe\u0bb4\u0bcd\u0bb5\u0bcb\u0bae\u0bcd \u0b85\u0bb0\u0ba9\u0bbe\u0bb0\u0bc8\u0baa\u0bcd \u0baa\u0bcb\u0bb2 <br></br>\\n  \u0b87\u0bb0\u0ba8\u0bcd\u0ba4\u0bc1\u0ba3\u0bcd\u0b9f\u0bc1 \u0bb5\u0bbe\u0bb4\u0bcd\u0bb5 \u0ba4\u0bbf\u0bb2\u0bc8 <br></br>\\n</Highlight>\\n\\n<iframe width=\\"100%\\" height=\\"315\\" \\n  src=\\"https://www.youtube.com/embed/_Bd_9aan9_4?si=g5tuA1gR55lVBvIV&amp;start=281\\" \\n  title=\\"YouTube video player\\" frameborder=\\"0\\" \\n  allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\\" \\n  allowfullscreen\\n  >\\n</iframe>\\n\\n### \u0bae\u0bc7\u0bb1\u0bcd\u0b95\u0bcb\u0bb3\u0bcd\u0b95\u0bb3\u0bcd\\n\\n1. [\u0b95\u0bc1\u0bb1\u0bc1\u0ba8\u0bcd\u0ba4\u0bca\u0b95\u0bc8 - \u0b95\u0bca\u0b99\u0bcd\u0b95\u0bc1\u0ba4\u0bc7\u0bb0\u0bcd \u0bb5\u0bbe\u0bb4\u0bcd\u0b95\u0bcd\u0b95\u0bc8](https://rampsychiatrist.blogspot.com/2011/03/blog-post_10.html)\\n2. [\u0ba4\u0bae\u0bbf\u0bb4\u0bcd \u0b87\u0ba3\u0bc8\u0baf\u0b95\u0bcd \u0b95\u0bb2\u0bcd\u0bb5\u0bbf\u0b95\u0bcd\u0b95\u0bb4\u0b95\u0bae\u0bcd - \u0b95\u0bca\u0b99\u0bcd\u0b95\u0bc1\u0ba4\u0bc7\u0bb0\u0bcd \u0bb5\u0bbe\u0bb4\u0bcd\u0b95\u0bcd\u0b95\u0bc8](https://www.tamilvu.org/ta/library-l1220-html-l12206g5-122848)\\n3. [\u0ba4\u0bbf\u0bb0\u0bc1\u0bb5\u0bbf\u0bb3\u0bc8\u0baf\u0bbe\u0b9f\u0bb1\u0bcd \u0baa\u0bc1\u0bb0\u0bbe\u0ba3\u0bae\u0bcd 52](https://ta.wikisource.org/wiki/%E0%AE%A4%E0%AE%BF%E0%AE%B0%E0%AF%81%E0%AE%B5%E0%AE%BF%E0%AE%B3%E0%AF%88%E0%AE%AF%E0%AE%BE%E0%AE%9F%E0%AE%B1%E0%AF%8D_%E0%AE%AA%E0%AF%81%E0%AE%B0%E0%AE%BE%E0%AE%A3%E0%AE%AE%E0%AF%8D/52)\\n4. [\u0ba4\u0bb0\u0bc1\u0bae\u0bbf\u0b95\u0bcd\u0b95\u0bc1\u0ba4\u0bcd \u0ba4\u0ba3\u0bcd\u0ba3\u0bb0\u0bc1\u0bb3\u0bcd --\u0ba4\u0bbf\u0bb0\u0bc1\u0bb5\u0bbf\u0bb3\u0bc8\u0baf\u0bbe\u0b9f\u0bb2\u0bcd --- \u0bae\u0bb2\u0bb0\u0bc1\u0bae\u0bcd \u0ba4\u0bae\u0bbf\u0bb4\u0bcd](https://eluthu.com/kavithai/287376.html)\\n5. [\u0baa\u0bc6\u0ba3\u0bcd\u0b95\u0bb3\u0bbf\u0ba9\u0bcd \u0b95\u0bc2\u0ba8\u0bcd\u0ba4\u0bb2\u0bcd \u0bae\u0ba3\u0bae\u0bcd \u0b87\u0baf\u0bb1\u0bcd\u0b95\u0bc8\u0baf\u0bbe\u0ba9\u0ba4\u0bbe? - UPSC EXAM TAMIL](https://www.gunathamizh.com/2010/01/blog-post_24.html)\\n6. [\u0ba8\u0b95\u0bcd\u0b95\u0bc0\u0bb0\u0bb0\u0bcd \u0baa\u0bb0\u0ba4\u0bb0\u0bcd](https://bharathar.blogspot.com/2006/)\\n7. [\u0baa\u0bc7\u0bb0\u0bbe\u0b9a\u0bbf\u0bb0\u0bbf\u0baf\u0bb0\u0bcd \u0ba8\u0bbf\u0ba9\u0bc8\u0bb5\u0bc1\u0b95\u0bb3\u0bcd: \u0ba8\u0baf\u0bae\u0bc6\u0ba9\u0baa\u0bcd \u0baa\u0b9f\u0bc1\u0bb5\u0ba4\u0bc1 \u0baf\u0bbe\u0ba4\u0bc6\u0ba9\u0bbf\u0ba9\u0bcd - \u0bb9\u0bb0\u0bbf \u0b95\u0bbf\u0bb0\u0bc1\u0bb7\u0bcd\u0ba3\u0ba9\u0bcd](http://www.tamilonline.com/thendral/article.aspx?aid=6481)\\n8. [\u0ba4\u0bbf\u0bb0\u0bc1\u0b95\u0bcd\u0b95\u0bc1\u0bb1\u0bb3\u0bcd : 508](https://www.valaitamil.com/theraan-piranaith-thelindhaan-vazhimurai-theeraa-itumpai-tharum-kural-508.html)\\n\\n## \u0bb5\u0bc6\u0b95\u0bc1\u0bae\u0ba4\u0bbf - Bonus\\n### \u0ba4\u0bbf\u0bb0\u0bc1\u0b95\u0bcd\u0b95\u0bc1\u0bb1\u0bb3\u0bcd : 508  - \u0b85\u0bb0\u0b9a\u0bbf\u0baf\u0bb2\u0bcd\\n\\n<Highlight color=\'#006666\' highlight=\'fg\' textAlign=\'left\'>\\n  \u0ba4\u0bc7\u0bb0\u0bbe\u0ba9\u0bcd \u0baa\u0bbf\u0bb1\u0ba9\u0bc8\u0ba4\u0bcd \u0ba4\u0bc6\u0bb3\u0bbf\u0ba8\u0bcd\u0ba4\u0bbe\u0ba9\u0bcd \u0bb5\u0bb4\u0bbf\u0bae\u0bc1\u0bb1\u0bc8<br></br>\\n  \u0ba4\u0bc0\u0bb0\u0bbe \u0b87\u0b9f\u0bc1\u0bae\u0bcd\u0baa\u0bc8 \u0ba4\u0bb0\u0bc1\u0bae\u0bcd.\\n</Highlight>\\n\\n### \u0b95\u0bb2\u0bc8\u0b9e\u0bb0\u0bcd \u0b89\u0bb0\u0bc8\\n\\n\u0b86\u0bb0\u0bbe\u0baf\u0bcd\u0ba8\u0bcd\u0ba4\u0bc1   \u0baa\u0bbe\u0bb0\u0bcd\u0b95\u0bcd\u0b95\u0bbe\u0bae\u0bb2\u0bcd    \u0b92\u0bb0\u0bc1\u0bb5\u0bb0\u0bc8\u0ba4\u0bcd  \u0ba4\u0bc1\u0ba3\u0bc8\u0baf\u0bbe\u0b95\u0ba4\u0bcd \u0ba4\u0bc7\u0bb0\u0bcd\u0bb5\u0bc1 \u0b9a\u0bc6\u0baf\u0bcd\u0ba4\u0bc1,\\n\u0b85\u0bae\u0bb0\u0bcd\u0ba4\u0bcd\u0ba4\u0bbf\u0b95\u0bcd\u0b95\u0bca\u0ba3\u0bcd\u0b9f\u0bbe\u0bb2\u0bcd \u0b85\u0bb5\u0bb0\u0bbe\u0bb2\u0bcd \u0bb5\u0bb0\u0bc1\u0b99\u0bcd\u0b95\u0bbe\u0bb2\u0ba4\u0bcd \u0ba4\u0bb2\u0bc8\u0bae\u0bc1\u0bb1\u0bc8\u0baf\u0bbf\u0ba9\u0bb0\u0bcd\u0b95\u0bcd\u0b95\u0bc1\u0bae\u0bcd \u0ba8\u0bc0\u0b99\u0bcd\u0b95\u0bbe\u0ba4\\n\u0ba4\u0bc1\u0ba9\u0bcd\u0baa\u0bae\u0bcd \u0bb5\u0bbf\u0bb3\u0bc8\u0baf\u0bc1\u0bae\u0bcd.\\n\\n### Translation\\n\\nWho trusts an untried stranger, brings disgrace, \\nRemediless, on all his race."},{"id":"browser-engines","metadata":{"permalink":"/wiki/blog/browser-engines","editUrl":"https://github.com/actionanand/wiki/blog/2024-02-17-browser-engines/2024-02-17-browser-engines.md","source":"@site/blog/2024-02-17-browser-engines/2024-02-17-browser-engines.md","title":"Browser Engines - Digest","description":"A JavaScript engine and a render engine are both important components of a web browser. However, they have different functions.","date":"2024-02-17T00:00:00.000Z","formattedDate":"February 17, 2024","tags":[{"label":"browser","permalink":"/wiki/blog/tags/browser"},{"label":"v8","permalink":"/wiki/blog/tags/v-8"}],"readingTime":3.525,"hasTruncateMarker":true,"authors":[{"name":"Anand Raja","title":"Software Developer","url":"https://github.com/actionanand","imageURL":"https://github.com/actionanand.png","key":"anand"}],"frontMatter":{"slug":"browser-engines","title":"Browser Engines - Digest","authors":"anand","tags":["browser","v8"]},"unlisted":false,"prevItem":{"title":"Kuruntokai - Verse 02","permalink":"/wiki/blog/kuruntokai-verse-2"},"nextItem":{"title":"How to fix WSL2 & VPN issue","permalink":"/wiki/blog/wsl2-and-cisco-vpn-issue-fix"}},"content":"A JavaScript engine and a render engine are both important components of a web browser. However, they have different functions.\\n\\n### JavaScript Engine\\n\\nA JavaScript engine is responsible for executing JavaScript code. JavaScript is a programming language that is used to add interactivity to web pages. When a web page contains JavaScript code, the browser\'s JavaScript engine is responsible for **parsing and executing JS code**. It **uses JIT compilation** for improved performance.\\n\\n### Render Engine\\n\\nA render(rendering) engine is responsible for displaying the content of a web page on the screen. This includes the HTML, CSS, and JavaScript code. The render engine takes the code and **converts it into a visual representation** that can be displayed on the screen. In browsers, it **works in conjunction with the JavaScript engine via the DOM**(Document Object Model). A rendering engine is also known as a browser engine or layout engine. A browser engine is a core software component of every major web browser.\\n\\n\x3c!--truncate--\x3e\\n\\n| **Browser**          | **Browser Engine** | **JS Engine**         |\\n|----------------------|--------------------|-----------------------|\\n| Google Chrome 28+    | Blink              | V8                    |\\n| Mozilla Firefox      | Gecko              | SpiderMonkey          |\\n| Apple Safari         | WebKit             | JavaScriptCore(Nitro) |\\n| UC Browser (Legacy)  | U3 Engine          | Not known             |\\n| Internet Explorer 11 | Trident            | Chakra                |\\n| MS Edge 18 (Legacy)  | EdgeHTML           | Chakra                |\\n| Opera 14 (Legacy)    | Presto             | Futhark & Carakan     |\\n| Chromium Based       | Blink              | V8                    |\\n\\n\\n* Edge 79+, Opera 15+, Brave, Vivaldi, etc are some example for chromium based browsers.\\n* **Blink** is a **fork** of the WebCore component of **WebKit**, which was originally a fork of the KHTML and KJS libraries from KDE.\\n* **WebRender** is a **component of Gecko**, the browser engine and is a GPU-based **2D rendering engine**.\\n\\n### The Just-in-Time (JIT) paradigm\\n\\nThe most common way of transforming the code is by performing ahead-of-time(**AOT**) compilation. It works exactly as it sounds: the code is transformed into machine code before the execution of your program during the compilation stage. This approach is used by many programming languages such as C++, Java, and others.\\n\\nTo transform the code faster and more effectively for dynamic languages(JS), a new approach was created called Just-in-Time (JIT) compilation. It combines the best from interpretation and compilation. **V8 uses an interpreter** called [**Ignition**](https://github.com/v8/v8/blob/master/src/interpreter/interpreter.h). Initially, it takes an abstract syntax tree and generates byte code.\\n\\n![chicken or egg](./chromium-browser.png)\\n\\n### Sandbox\\n\\nA sandbox is used to **execute JavaScript in a browser**. A sandbox is a security mechanism that isolates code from the rest of the system. This means that JavaScript code running in a sandbox cannot access the user\'s files or other resources on the computer.\\n\\nBrowsers use sandboxes to protect users from malicious JavaScript code. For example, if a website contains malicious JavaScript code, the sandbox will **prevent the code from accessing the user\'s files or other resources**.\\n\\nSandboxes are also used to improve the performance of browsers. By **isolating JavaScript code from the rest of the system**, browsers can execute the code more efficiently.\\n\\nThere are a number of different ways to sandbox JavaScript code in a browser. One common method is to use an iframe. An iframe is a HTML element that creates a sandboxed environment for executing JavaScript code.\\n\\nAnother common method for sandboxing JavaScript code is to use a web worker. A web worker is a JavaScript script that runs in the background, separate from the main thread of the browser. This allows the JavaScript code to run without affecting the performance of the browser.\\n\\n### JavaScript vs. Rendering Engine\\n\\n* JavaScript engine executes code, while the rendering engine is responsible for displaying the web pages.\\n* Each browser uses its own JavaScript and rendering engine.\\n* JavaScript engine runs JavaScript code, while the rendering engine interprets HTML, XML, CSS, etc.\\n\\n### How code is parsed & compiled\\n\\nJavaScript Engines & What They Do\\n\\n![JavaScript Engines](js-engines.png)\\n\\n### Sources\\n1. [JavaScript V8 Engine Explained - hacker noon](https://hackernoon.com/javascript-v8-engine-explained-3f940148d4ef)\\n1. [How JavaScript Works: Under the Hood of the V8 Engine](https://www.freecodecamp.org/news/javascript-under-the-hood-v8/)\\n1. [What are Web Standards and how does Web Browser work?](https://lyamkin.com/blog/what-are-web-standards-and-how-does-web-browser-work/)\\n1. [Browser Engines: The Crux Of Cross Browser Compatibility](https://www.lambdatest.com/blog/browser-engines-the-crux-of-cross-browser-compatibility/)\\n1. [Browser Engine and Types of Browser Engines](https://codinglap.com/browser-engine-and-types-of-browser-engines/)"},{"id":"wsl2-and-cisco-vpn-issue-fix","metadata":{"permalink":"/wiki/blog/wsl2-and-cisco-vpn-issue-fix","editUrl":"https://github.com/actionanand/wiki/blog/2024-02-12-wsl2-vpn-issue-fix.md","source":"@site/blog/2024-02-12-wsl2-vpn-issue-fix.md","title":"How to fix WSL2 & VPN issue","description":"How to fix WSL2 and Cisco Anyconnect VPN internet issue.","date":"2024-02-12T00:00:00.000Z","formattedDate":"February 12, 2024","tags":[{"label":"wsl","permalink":"/wiki/blog/tags/wsl"},{"label":"wsl2","permalink":"/wiki/blog/tags/wsl-2"},{"label":"vpn","permalink":"/wiki/blog/tags/vpn"}],"readingTime":5.08,"hasTruncateMarker":true,"authors":[{"name":"Anand Raja","title":"Software Developer","url":"https://github.com/actionanand","imageURL":"https://github.com/actionanand.png","key":"anand"}],"frontMatter":{"slug":"wsl2-and-cisco-vpn-issue-fix","title":"How to fix WSL2 & VPN issue","authors":"anand","tags":["wsl","wsl2","vpn"]},"unlisted":false,"prevItem":{"title":"Browser Engines - Digest","permalink":"/wiki/blog/browser-engines"},"nextItem":{"title":"JS Regex Helper","permalink":"/wiki/blog/js-regex-helper"}},"content":"> How to fix WSL2 and Cisco Anyconnect VPN internet issue.\\n\\n### The problem - some samples\\n\\n* `sudo apt update` will display something similar below:\\n\\n```bash showLineNumbers\\nErr:1 http://archive.ubuntu.com/ubuntu focal-updates InRelease\\n  Temporary failure resolving \'archive.ubuntu.com\'\\nErr:2 http://archive.ubuntu.com/ubuntu focal-backports InRelease\\n  Temporary failure resolving \'archive.ubuntu.com\'\\nReading package lists... Done\\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/focal/InRelease  Temporary failure   resolving \'archive.ubuntu.com\'\\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/focal-updates/InRelease  Temporary   failure resolving \'archive.ubuntu.com\'\\n```\\n\\n* `git pull` will display something similar below:\\n\\n```bash\\n// code-block-error-line\\nfatal: unable to access \'https://github.com/actionanand/wiki.git/\': Could not resolve host: github.com\\n```\\n\\n* `ping google.com` will display something similar below:\\n\\n```bash\\nping: google.com: Temporary failure in name resolution\\n```\\n\x3c!--truncate--\x3e\\n\\nTrying `sudo apt update`, `ping google.com`, `git pull`, etc on `wsl2` will fail when connected to Cisco Anyconnect VPN but without vpn it works fine. The problem is when you are connected to anyconnect(vpn), wsl fails to resolve the DNS.\\n\\n## The solution\\n\\nInternet connection and DNS routing are broken from WSL2 instances, when some VPNs are active. The workaround breaks down into two steps:\\n\\n### DNS Resolution\\n\\n1. Having the Cisco Anyconnect VPN connected, you\'ve to kick start powershell as Admin. Then fire the following commands to get all the available DNS/nameservers. Kindly take these DNS/nameservers down as we need them in later stage.\\n\\n```powershell\\nGet-DnsClientServerAddress -AddressFamily IPv4 | Select-Object -ExpandProperty ServerAddresses\\n```\\n\\n2. Next you can fire the folowing commands to get all the available search domains that will be needed later with the nameservers above.\\n\\n```powershell\\nGet-DnsClientGlobalSetting | Select-Object -ExpandProperty SuffixSearchList\\n```\\n\\n3. When the VPN is active, the autogenerated `/etc/resolv.conf` does not work. So the list of nameservers must be manually built to include some default DNS Name Servers and the DNS from the VPN.\\n\\nFirst, disable automatically generating `/etc/resolv.conf`. And proceed in `wsl2` as described below:\\n\\n```bash\\n  sudo unlink /etc/resolv.conf # this will unlink the default wsl2 resolv.conf\\n```\\n\\n```bash title=\'/etc/resolv.conf\'\\n  # This config will prevent wsl2 from overwritting the resolve.conf file everytime you start wsl2\\n  cat <<EOF | sudo tee -a /etc/wsl.conf\\n  [network]\\n  generateResolvConf = false\\n  EOF\\n```\\n\\nNext, manually add the corportate DNS Server as the first `nameserver` in `/etc/resolv.conf`.\\n\\n```bash title=\'/etc/resolv.conf\'\\ncat <<EOF | sudo tee -a /etc/resolv.conf\\nnameserver 10.50... # The company DNS/nameserver from the command in step 1\\nnameserver 10.50... # The company DNS/nameserver from the command in step 1\\nnameserver 8.8.8.8\\nnameserver 8.8.4.4\\nsearch this.searchdomain.com # The search domain that we got from step 2\\nEOF\\n```\\n\\n4. To prevent the system from re-writing your `/etc/resolv.conf` on startup of wsl, fire the below command in `wsl2`\\n\\n```bash\\nsudo chattr +i /etc/resolv.conf\\n```\\n\\n5. For extra information\\n\\nTo get `<corporateDNS>` addresses, use `ipconfig /all` from `CMD` or `Powershell` prompt, and check the details of the VPN adapter:\\n\\n```powershell\\nDescription . . . . . . . . . . . : Cisco AnyConnect Secure Mobility Client Virtual Miniport Adapter for Windows x64\\nPhysical Address. . . . . . . . . : XX-XX-XX-XX-XX-XX\\nDHCP Enabled. . . . . . . . . . . : No\\nAutoconfiguration Enabled . . . . : Yes\\nIPv6 Address. . . . . . . . . . . : xxxx:xxxx:xxxx:xxxx(Preferred)\\nLink-local IPv6 Address . . . . . : xxxx:xxxx:xxxx:xxxx(Preferred)\\nIPv4 Address. . . . . . . . . . . : 10.20.30.40(Preferred)\\nSubnet Mask . . . . . . . . . . . : 255.255.255.255\\nDefault Gateway . . . . . . . . . : ::\\n                                    0.0.0.0\\nDHCPv6 IAID . . . . . . . . . . . :\\nDHCPv6 Client DUID. . . . . . . . : \\nDNS Servers . . . . . . . . . . . : 123.45.67.89    <- Corporate DNS 1\\n                                    123.45.67.90    <- Corporate DNS 2\\nPrimary WINS Server . . . . . . . : xxx.xx.xxx.xx\\nNetBIOS over Tcpip. . . . . . . . : Enabled\\n```\\n\\n### Network connection\\n\\nWhen the VPN connection is active, network traffic out of WSL2 is not passed to the internet.\\n\\n> Changing the Interface Metric 1 -> 6000 for AnyConnect VPN Adapter will resolve the connection issue. And  this has to be done each time after the VPN connection established.\\n\\nBy default, the Interface Metrics for AnyConnect are:\\n- IPv6: 6000\\n- IPv4: 1\\n\\n`ping` times out from WSL Shell.\\n\\nChanging the Interface Metrics as 600 for AnyConnect will reflect as below:\\n- IPv6: 6000\\n- IPv4: 6000\\n\\n1. To chnage **Interface Metric 1 -> 6000**, fire the below command in powershell\\n\\n```powershell\\nGet-NetAdapter | Where-Object {$_.InterfaceDescription -Match \\"Cisco AnyConnect\\"} | Set-NetIPInterface -InterfaceMetric 6000\\n```\\n:::tip\\nPS: The above command in powershell with admin rights, has to be fired each time after the VPN connection established\\n:::\\n\\n2. Optional: \\n\\nRestart the `wsl2` from powershell using the below command or close the wsl2 window and reopen it.\\n\\n```powershell\\nRestart-Service LxssManager\\n```\\n\\n* [For more ...](https://gist.github.com/machuu/7663aa653828d81efbc2aaad6e3b1431)\\n\\n## Bonus\\n\\n### Not able to download RAW files too?\\n\\n```bash\\nwget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh\\n--2022-12-28 13:02:52-- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh\\nResolving raw.githubusercontent.com (raw.githubusercontent.com)\u2026 49.44.79.236, 2405:200:1607:2820:41::36\\nConnecting to raw.githubusercontent.com (raw.githubusercontent.com)|49.44.79.236|:443\u2026 failed: Connection timed out.\\nConnecting to raw.githubusercontent.com (raw.githubusercontent.com)|2405:200:1607:2820:41::36|:443\u2026 failed: Network is unreachable.\\n```\\n\\nIf you are in India and using the Jio network, you may face this as well because the ISP blocks the `raw.githubusercontent.com` at the DNS level for some unknown reason!\\n\\n\\n* Updating the `/etc/hosts` file in Linux & Windows or changing DNS or connecting to vpn will resolve the issue. Here we can see about updating `hosts` file.\\n\\n1. For windows, Open `notepad` with admin, then click `file -> open` (`ctr+o`) and navigate to path **%SystemRoot%\\\\System32\\\\drivers\\\\etc\\\\hosts**\\n\\n```bash\\nC:\\\\System32\\\\drivers\\\\etc\\\\hosts\\n```\\n\\nThen, at the end of this file, add the IP address and the domain name as below:\\n\\n```bash\\n185.199.110.133 raw.githubusercontent.com\\n```\\n\\nOpen the `/etc/hosts` file via nano or any editor in linux and mac and add the above code.\\n\\n```bash\\nsudo nano /etc/hosts\\n```\\n\\n### Some WSL commands for powershell\\n\\n1. Checking wsl version\\n\\n```powershell\\nwsl -l -v\\n```\\n\\n2. If version shows as 1 then, use the below command to switch as 2\\n\\n```powershell\\nwsl --set-version <Ubuntu-distro-name> 2\\n```"},{"id":"js-regex-helper","metadata":{"permalink":"/wiki/blog/js-regex-helper","editUrl":"https://github.com/actionanand/wiki/blog/2024-02-09-js-regex-helper.mdx","source":"@site/blog/2024-02-09-js-regex-helper.mdx","title":"JS Regex Helper","description":"Regex - short Regular Expression","date":"2024-02-09T00:00:00.000Z","formattedDate":"February 9, 2024","tags":[{"label":"regex","permalink":"/wiki/blog/tags/regex"}],"readingTime":9.06,"hasTruncateMarker":true,"authors":[{"name":"Anand Techie","title":"Software Developer, Frontend","url":"https://github.com/AnandRaja-tech","imageURL":"https://github.com/AnandRaja-tech.png","key":"anand-tech"}],"frontMatter":{"slug":"js-regex-helper","title":"JS Regex Helper","authors":"anand-tech","description":"Regex - short Regular Expression","tags":["regex"]},"unlisted":false,"prevItem":{"title":"How to fix WSL2 & VPN issue","permalink":"/wiki/blog/wsl2-and-cisco-vpn-issue-fix"},"nextItem":{"title":"Which came first?","permalink":"/wiki/blog/the-chicken-or-the-egg"}},"content":"import Highlight from \'@site/src/components/Highlight\';\\n\\nA <Highlight color=\'#25c2a0\'> regular expression </Highlight>, also known as <Highlight color=\'#1877F2\'> regex </Highlight> or <Highlight color=\'#1877F2\'> regexp </Highlight>, is a sequence of characters that define a search pattern. It can be used to search, edit, or manipulate text and data.\\n\\nIn JavaScript, regular expressions are created using the <Highlight color=\'#ff1b68\'> RegExp object </Highlight>. The RegExp object has a number of methods that can be used to search for and manipulate strings.\\n\\nHere are some examples of regular expressions in JavaScript:\\n\\n```js showLineNumbers\\n// Find all occurrences of the letter \\"a\\" in a string\\nconst regex = /a/g;\\nconst string = \\"This is a string.\\";\\nconst matches = regex.exec(string);\\n\\n// Replace all occurrences of the letter \\"a\\" with the letter \\"e\\" in a string\\nconst regex = /a/g;\\nconst string = \\"This is a string.\\";\\nconst newString = string.replace(regex, \\"e\\");\\n\\n// Check if a string contains a particular pattern\\nconst regex = /^abc/g;\\nconst string = \\"abc123\\";\\nconst match = regex.test(string);\\n```\\n\\n\x3c!--truncate--\x3e\\n\\n\\n> <Highlight color=\'#25c2a0\'> Regex </Highlight> short Regular Expression\\n\\n### 1. General view\\n\\n  - Expressions need to be surrounded by forward slashes - Eg. `/expression/`\\n\\n### 2. Modes or Flags in regex\\n\\n  - Standard - `/expression/`\\n  - Case-insensitive - `/expression/i`\\n\\n    - With this flag the search is case-insensitive: no difference between **A** and **a**\\n\\n  - Dot-matches-all - `/expression/s`\\n\\n    - Enables **dotall** mode, that allows a dot `.` to match newline character `\\\\n`\\n\\n    - By default, a dot doesn\u2019t match the newline character `\\\\n`.\\n\\n    - For instance, the regexp `A.B` matches A, and then B with any character between them, except a newline `\\\\n`\\n\\n    ```js\\n    alert(\'A\\\\nB\'.match(/A.B/)); // null (no match)\\n    ```\\n\\n    - There are many situations when we\u2019d like a dot to mean literally **any character**, newline included.\\n\\n    - That\u2019s what flag `s` does. If a regexp has it, then a dot `.` matches literally any character:\\n\\n    ```js\\n    alert(\'A\\\\nB\'.match(/A.B/s)); // A\\\\nB (match!)\\n    ```\\n\\n  - Multiline - `/expression/m`\\n  - Global - `/expression/g`\\n    - With this flag the search looks for all matches, without it \u2013 only the first match is returned\\n\\n### 3. Metacharacters\\n\\n* They\'re characters with special meaning the most common metacharacters we use in expressions are `. + - * $ {} () [] ! : = ^ | `\\n\\n  - Escaping Metacharacters:\\n\\n    - Sometmes we need to escape our symbols if they look the same as the text we want to find,\\n    - for example, As you can see here `/4.500/ ` these match will cause issues if we need to find `4.500` since the dot its the wildecard but what we need is the literal dot, we need to do something like the below.\\n\\n    - `/4\\\\.500/` we use a back slash here to escape the wildcard making it a literal character now, meaning its just a dot.\\n\\n### 4. Range sets\\n\\n  - `[A-Z]` matches any uppercase character from A to Z\\n\\n  - `[a-z]` matches any lowercase character from A to Z\\n\\n  - `[0-9]` matches any digit character from 0 to 9\\n\\n  - `[A-Za-z0-9]` we can also combine them\\n  - `/au[acdt]o/` matches `auto` - third character should be either one from the set `[acdt]`\\n\\n### 5. Negative sets\\n\\n  - `[^abc]` match anything except `abc` or what is after the caret inside the brackets. We are still matching one character here, not group of all character.\\n\\n### 6. Shorthand for sets\\n\\n  | **Code** | **Description**                                             | **Equivalent** |\\n  | :------: | :---------------------------------------------------------- | :------------- |\\n  |    \\\\d    | Digit                                                       | [0-9]          |\\n  |    \\\\D    | Non digit                                                   | [^0-9]         |\\n  |    \\\\s    | Any tab carriage return or new line                         | [ \\\\t\\\\r\\\\n]      |\\n  |    \\\\S    | No whitespace of any kind                                   | [^ \\\\t\\\\r\\\\n]     |\\n  |    \\\\w    | Word characters including underscore & digits, NO Hyphen(-) | [_A-Za-z0-9]   |\\n  |    \\\\W    | No word characters                                          | [ ^_A-Za-z0-9] |\\n\\n  - `/\\\\w\\\\w\\\\w/` matches 123, abc, and \\\\_1Z (i.e, 3 word characters)\\n\\n  - `/\\\\d\\\\d\\\\d/` matches 123 bot not car (i.e, 3 digits)\\n\\n### 7. Repetition Metacharacters\\n\\n  | Quantifier | Description                                                              |\\n  | :--------: | :----------------------------------------------------------------------- |\\n  |     `\\\\*`   | Matches the previous element zero or more times.                         |\\n  |     `+`    | Matches the previous element one or more times.                          |\\n  |     `?`    | Matches the previous element zero or one time.                           |\\n  |    `{n}`   | Matches the previous element exactly n times.                            |\\n  |    `{n,}`  | Matches the previous element at least n times.                           |\\n  |   `{n,m}`  | Matches the previous element at least n times, but no more than m times. |\\n\\n  - `/cars*/` - matches car, cars and carsssssssssss and many more\\n  - `/\\\\d\\\\d\\\\d*/` - matches two digits or more (remember this is starts from zero to more)\\n  - `/cars+/` - does not match car since it needs to be more more than 1 character ,E.G, cars or carsssssssssss\\n  - `/\\\\d\\\\d\\\\d+/` - matches three digits or more (remember this is starts from 1 to more)\\n  - `/cars?/` - the (s) its optional meaning it matches car and cars not carssssssss\\n\\n    - `/\\\\d{1}/` - matches 1 single digits\\n    - `/\\\\d{1,}/` - matches 1 or more digits\\n    - `/\\\\d{1,2}/` - matches 1 to 2 digits\\n\\n### 8. Greedy Expression vs Lazy\\n\\n  - Greedy `\\\\w+\\\\d+\\\\w+` it maches `file1_export` from `file1_export.sql` since it tries to math as much as possible\\n  - Lazy `\\\\w+\\\\d+\\\\w+?` , this matches `file1_` from `file1_export.sql` why is gives up when it find the first word character at the end. (Notice we have a question mark at the end of the w \\"?\\" )\\n  - You can use the lazy format in these quantifiers `_, +. {} ?`, you would have something likes this `_?, +?, {}?, ??`\\n\\n### 9. Grouping & Alternation\\n\\n  - Grouping:\\n\\n    - `/(cde)+/` matches `cde` and `cdecdecdecde`\\n    - `/(super)?market/` matches `market` and `supermarket`\\n    - `(super)market` matches `supermarket`\\n\\n  - Alternation\\n\\n    - `super|market` matches `super` or `market`\\n    - `super(market|bowl)` matches `supermarket` or `superbowl`\\n    - `\\\\(12|ab|#%){8}\\\\` this matches `12ab#%12ab#%12ab`\\n      The code above might seen confusing but was happening is that the sets of characters are repeating until they reach eight times in sets of two. Notice we are wrapping the symbols in parenthesis, basically groping then and then applying the quantifier.\\n\\n### 10. Anchors\\n\\n    | Metacharacter | Description                                                                                  |\\n    | :-----------: | :------------------------------------------------------------------------------------------- |\\n    |       ^       | The match must start at the beginning of the string or line.                                 |\\n    |       $       | The match must occur at the end of the string or before \\\\n at the end of the line or string. |\\n    |      \\\\A       | The match must occur at the start of the string.                                             |\\n    |      \\\\Z       | The match must occur at the end of the string or before \\\\n at the end of the string          |\\n\\n    - `\\\\A` and `\\\\Z` are supported by PHP, Python, Perl, Java and .NET . Maybe other engines will start supporting it the future.\\n\\n    - the` ^` and `$` support `multiline mode`, meaning they can match not just then end of string but the end of lines. With `\\\\A` and `\\\\Z` you cannot do that.\\n      - `/^\\\\./ ` this matches the first dot on `.car.`\\n      - `/\\\\.$/` this matches the last dot on `.car. `\\n\\n### 11. Boundaries\\n\\n    - `\\\\b\\\\w+\\\\b` matches `my car is black`, this will be default behavior without `\\\\b` in this case, so every beginning and end of the word is matched.\\n\\n    - `\\\\B\\\\w+\\\\B` matches `a` from `car` and `lack` from `black`, so letters that are NOT the beginning or end of words are matched here.\\n\\n### 12. Backreferences \\nGrouped expressions that are capture for later usage\\n\\n    - `/super(market)/` matches `supermarket` and stores `market`. So if we wanted to use this store value we would use numbers from 1-9 for example `\\\\1`.\\n\\n      - `super(market) \\\\1` matches `supermarket market` -> `\\\\1` means `market` here.\\n      - `super(market) \\\\1 super(bowl) \\\\2` matches `supermarket market superbowl bowl`\\n      - As you can see we are using the numbers from left to right in order to use the data stored int the parenthesis.\\n      - since capturing happens by default it will eat up the spaces 1-9 that we have, and can slow down our app, to turn this off we just use question mark followed by a colon in the parenthesis like so.. `super(?:market) `\\n\\n      ```js showLineNumbers\\n      let phrase = \'Anand Raja\';\\n      let pattern = /(\\\\w+)\\\\s(\\\\w+)/;\\n\\n      let newPhrase = phrase.replace(pattern, \'$1\');\\n      console.log(\'First: \' + newPhrase);\\n      // Output will be first parenthesis\'s data\\n      // First: Anand\\n\\n      newPhrase = phrase.replace(pattern, \'$2\');\\n      console.log(\'Second: \' + newPhrase);\\n      // Output will be second parenthesis\'s data\\n      // Second: Raja\\n\\n      pattern = /(?:\\\\w+)\\\\s(\\\\w+)/;\\n      newPhrase = phrase.replace(pattern, \'$1\');\\n      console.log(\'Third: \' + newPhrase);\\n      // Output will be second parenthesis\'s data as we\'re turning off capturing for first parenthesis\\n      // Third: Raja\\n\\n      pattern = /(\\\\w+)\\\\s(\\\\w+)\\\\s\\\\1/;\\n      phrase = `love is love`; // \\\\1 denotes love\\n      newPhrase = phrase.replace(pattern, \'$1\');\\n      console.log(\'Fourth: \' + newPhrase);\\n      // Output will be first parenthesis\'s data\\n      // Fourth: love\\n      ```\\n\\n### 13. Positive & Negative Lookaheads\\n\\n    - `super(?=market)` if `super` is preceded by `market`, match it, this will match `super`\\n      - if `supermarket superbowl` is phrase to be checked, `super` from `supermarket` will only be matched. -> meaning market should be preceded by super(i.e, super with market)\\n    - To do the apposite we do this, `super(?!market)`\\n      - if `supermarket superbowl` is phrase to be checked, `super` from `superbowl` will only be matched. -> meaning market should not be there after super(i.e, super without market)\\n\\n### 14. Positive & Negative Lookbehind\\n\\n    - `(?<=super)market` matches `market` in `supermarket`\\n    - `(?<!market)super` matches `super` in `supermarket`\\n    - Lookbehind is not supported in non-V8 browsers, such as Safari, Internet Explorer\\n\\n    - The syntaxes are:\\n\\n      - Positive lookbehind: `(?<=Y)X`, matches `X`, but only if there\u2019s `Y` before it.\\n      - Negative lookbehind: `(?<!Y)X`, matches `X`, but only if there\u2019s no `Y` before it.\\n\\n### 15. Examples\\n\\n    - Postal code to choose either 4 or 5 digits in the begining, or along with that dash and another 4 digits at the end (say `34216-6501`)\\n\\n    ```regex\\n      /^\\\\d{4,5}(-\\\\d{4})?$/\\n    ```\\n\\n    - Password with altest one uppercase, lowercase, and one special character from the list (!,@,$,#,-,^,%,&,\\\\*) with min. 8 and max. 13 characters\\n\\n    ```regex\\n      /^(?=.*[A-Z])(?=.*[a-z])(?=.*\\\\d)(?=.*[!@$#\\\\-\\\\^%&*])\\\\S{8,13}$/\\n    ```\\n\\n    - The below regex will match `27-11-1996` or `05/10/2023` or `7-1-1954` or `7-03-1954`. One disadvantage is year can be any 4 digits.\\n\\n    ```regex\\n      /^(0?[1-9]|[1-2][0-9]|3[0-1])[/-](0?[1-9]|1[0-2])[/-]\\\\d{4}$/\\n    ```\\n\\n    - Select all html tags except [a, ul, li, ol]\\n\\n    ```regex\\n      /<(?!\\\\/?(a|ul|li|ol)(?=>|\\\\s?.*>))\\\\/?.*?>/g\\n    ```\\n\\n    - Select all anchor tags(a tag) in html\\n\\n    ```regex\\n      /<a.*?>|<\\\\/a>/g\\n    ```\\n\\n    - How to select all html tags\\n\\n    ```regex\\n      /<[^>]*>/g\\n    ```\\n\\n### Usefull online Regex validator\\n\\n1. [Regex101](https://regex101.com/)\\n2. [Regex Pal](https://www.regexpal.com/)\\n3. [Regex Pal github source code](https://github.com/rpayanm/regexpal)\\n4. [I hate Regex source code - Vue](https://github.com/geongeorge/i-hate-regex)\\n\\n### Resources\\n\\n1. [Regex to validate date formats dd/mm/YYYY, dd-mm-YYYY, dd.mm.YYYY, dd mmm YYYY, dd-mmm-YYYY, dd/mmm/YYYY, dd.mmm.YYYY with Leap Year Support](https://stackoverflow.com/questions/15491894/regex-to-validate-date-formats-dd-mm-yyyy-dd-mm-yyyy-dd-mm-yyyy-dd-mmm-yyyy)\\n2. [Javascript info - regex](https://javascript.info/regexp-introduction)\\n3. [Learn Regex - github](https://github.com/ziishaned/learn-regex)\\n4. [How to Use Regular Expressions in JavaScript \u2013 Tutorial for Beginners](https://www.freecodecamp.org/news/regular-expressions-for-beginners/)\\n5. [JavaScript Regex - Programiz](https://www.programiz.com/javascript/regex)\\n6. [A Guide to Regular Expressions (Regex) in JavaScript](https://builtin.com/software-engineering-perspectives/javascript-regex)"},{"id":"the-chicken-or-the-egg","metadata":{"permalink":"/wiki/blog/the-chicken-or-the-egg","editUrl":"https://github.com/actionanand/wiki/blog/2024-02-09-chicken-or-egg/index.mdx","source":"@site/blog/2024-02-09-chicken-or-egg/index.mdx","title":"Which came first?","description":"You\'ve heard the age-old riddle the chicken or the egg?\\" Taken metaphorically, it\'s a meditation on the futility of determining the cause of a self-perpetuating cycle. Taken literally, it\'s a great question for evolutionary biologists.","date":"2024-02-09T00:00:00.000Z","formattedDate":"February 9, 2024","tags":[{"label":"js","permalink":"/wiki/blog/tags/js"},{"label":"riddle","permalink":"/wiki/blog/tags/riddle"},{"label":"puzzle","permalink":"/wiki/blog/tags/puzzle"}],"readingTime":0.735,"hasTruncateMarker":true,"authors":[{"name":"Anand Raja","title":"Software Developer","url":"https://github.com/actionanand","imageURL":"https://github.com/actionanand.png","key":"anand"},{"name":"Anand Techie","title":"Software Developer, Frontend","url":"https://github.com/AnandRaja-tech","imageURL":"https://github.com/AnandRaja-tech.png","key":"anand-tech"}],"frontMatter":{"slug":"the-chicken-or-the-egg","title":"Which came first?","authors":["anand","anand-tech"],"tags":["js","riddle","puzzle"]},"unlisted":false,"prevItem":{"title":"JS Regex Helper","permalink":"/wiki/blog/js-regex-helper"},"nextItem":{"title":"Centering a Text Inside a Button","permalink":"/wiki/blog/text-align-center-in-button"}},"content":"import Tabs from \'@theme/Tabs\';\\nimport TabItem from \'@theme/TabItem\';\\n\\nYou\'ve heard the age-old riddle: \\"Which came first: the chicken or the egg?\\" Taken metaphorically, it\'s a meditation on the futility of determining the cause of a self-perpetuating cycle. Taken literally, it\'s a great question for evolutionary biologists.\\n\\nChickens come from eggs, but eggs come from chickens. So which came first?\\n\\n\x3c!--truncate--\x3e\\n\\n:::tip\\nWhich came first, *the chicken* or *the egg*?\\n\\n<Tabs>\\n  <TabItem value=\\"js\\" label=\\"JS\\">\\n  ```js\\n  const question = [\'\ud83e\udd5a\',\'\ud83d\udc14\'];\\n  const answer = question.sort();\\n  console.log(answer[0] + \' was first!\');\\n  ```\\n  </TabItem>\\n  <TabItem value=\\"react\\" label=\\"React\\">\\n  ```jsx\\n  <button onClick={\\n    () => {\\n      const question = [\'\ud83e\udd5a\',\'\ud83d\udc14\'];\\n      const answer = question.sort();\\n      return alert(answer[0] + \' was first!\');\\n    } \\n  }>Click me!</button>\\n  ```\\n  </TabItem>\\n</Tabs>\\n\\n<button onClick={\\n  () => {\\n    const question = [\'\ud83e\udd5a\',\'\ud83d\udc14\'];\\n    const answer = question.sort();\\n    return alert(answer[0] + \' was first!\');\\n  } \\n}>Click me!</button>\\n\\n:::\\n\\n\x3c!-- https://images.newscientist.com/wp-content/uploads/2021/05/21153947/what-came-first-the-chicken-or-the-egg-gettyimages-a0048-000156_chickenegg_web.jpg --\x3e\\n![chicken or egg](./chicken-egg.jpg)"},{"id":"text-align-center-in-button","metadata":{"permalink":"/wiki/blog/text-align-center-in-button","editUrl":"https://github.com/actionanand/wiki/blog/2024-02-08-text-align-center.md","source":"@site/blog/2024-02-08-text-align-center.md","title":"Centering a Text Inside a Button","description":"Instead of centering headings and paragraphs, let\u2019s center text inside another element ( ). Aligning the button, and the text inside the button, would differ slightly from the examples.","date":"2024-02-08T00:00:00.000Z","formattedDate":"February 8, 2024","tags":[{"label":"css","permalink":"/wiki/blog/tags/css"},{"label":"center-css","permalink":"/wiki/blog/tags/center-css"}],"readingTime":0.66,"hasTruncateMarker":false,"authors":[{"name":"Anand Raja","title":"Software Developer","url":"https://github.com/actionanand","image_url":"https://github.com/actionanand.png","imageURL":"https://github.com/actionanand.png"},{"name":"Anand Techie","title":"Software Developer, JS Specialist"}],"frontMatter":{"slug":"text-align-center-in-button","title":"Centering a Text Inside a Button","authors":[{"name":"Anand Raja","title":"Software Developer","url":"https://github.com/actionanand","image_url":"https://github.com/actionanand.png","imageURL":"https://github.com/actionanand.png"},{"name":"Anand Techie","title":"Software Developer, JS Specialist"}],"tags":["css","center-css"]},"unlisted":false,"prevItem":{"title":"Which came first?","permalink":"/wiki/blog/the-chicken-or-the-egg"}},"content":"import Tabs from \'@theme/Tabs\';\\nimport TabItem from \'@theme/TabItem\';\\n\\nInstead of centering headings and paragraphs, let\u2019s center text inside another element (`<button> </button>`). Aligning the button, and the text inside the button, would differ slightly from the examples.\\n\\nThat\u2019s because the text-align property only works on the content inside block-level elements, such as headings and paragraphs, and not inline elements, such as buttons.\\n\\nSo here\'s what we\'ll do instead:\\n\\n* Wrap the button in a `div`\\n* Then, add an inline style declaration to the div, i.e. `<div style=\\"text-align:center\\">`.\\n\\n\\n<Tabs>\\n  <TabItem value=\\"html\\" label=\\"HTML\\">\\n    ```html\\n    <div style=\\"text-align:center\\">\\n      <button type=\\"button\\" class=\\"btn btn-primary\\">Click Me</button>\\n    </div>\\n    ```\\n  </TabItem>\\n  <TabItem value=\\"css\\" label=\\"CSS\\">\\n    ```css\\n    .btn{\\n      background-color: #0068B1; \\n      font-family: \'Lexend Deca\', sans-serif;\\n      text-transform: uppercase;\\n      color: white;\\n      padding: 20px; \\n      width: 200px;\\n      border-radius: 10px;\\n    }\\n\\n    .btn:hover{\\n      background-color: #408EC5;\\n    }\\n    ```\\n  </TabItem>\\n</Tabs>"}]}')}}]);