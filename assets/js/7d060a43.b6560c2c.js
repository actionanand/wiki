"use strict";(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[4434],{55245:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"rxjs-tips/subject-rxjs","title":"RxJs Subject Part 1","description":"1. How to do some logical operations after we stopped typing inside input field in Angular","source":"@site/docs/rxjs-tips/subject-rxjs.md","sourceDirName":"rxjs-tips","slug":"/rxjs-tips/subject-rxjs","permalink":"/wiki/docs/rxjs-tips/subject-rxjs","draft":false,"unlisted":false,"editUrl":"https://github.com/actionanand/wiki/docs/rxjs-tips/subject-rxjs.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"sidebar_label":"RxJs Subject - part 1","title":"RxJs Subject Part 1"},"sidebar":"tutorialSidebar","previous":{"title":"RxJs Tips","permalink":"/wiki/docs/category/rxjs-tips"},"next":{"title":"Angular RnD","permalink":"/wiki/docs/category/angular-rnd"}}');var i=t(74848),o=t(28453);const r={sidebar_position:1,sidebar_label:"RxJs Subject - part 1",title:"RxJs Subject Part 1"},a=void 0,c={},l=[];function d(e){const n={code:"code",li:"li",ol:"ol",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"How to do some logical operations after we stopped typing inside input field in Angular"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Two way binding ",(0,i.jsx)(n.code,{children:"[(ngModal)]"})," can be interpreted as property binding ",(0,i.jsx)(n.code,{children:"[ngModel]"})," and event binding ",(0,i.jsx)(n.code,{children:"(ngModelChange)"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"import { OnInit, Component } from '@angular/core';\n\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'my-app',\n  template: `<input [ngModel]='inputTyped' (ngModelChange)='onInputChanged($event)' />`\n})\nexport class AppComponent implements OnInit  {\n  inputTyped: string;\n  inputChanged: Subject<string> = new Subject<string>();\n\n    constructor() {}\n\n    ngOnInit() {\n      this.inputChanged.pipe(\n        debounceTime(500))\n        .subscribe(typedText => {\n          console.log(typedText);\n          // Do any logical things\n        });\n    }\n\n    onInputChanged(text: string) {\n      this.inputChanged.next(text);\n    }\n}\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"BehaviorSubject"})," to pass data as observable"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:'title="subject.service.ts"',children:"private toggle = new BehaviorSubject<boolean>(false);\n\ntoggle$ = this.toggle.asObservable(); // can be subscribed anywhere\n\nonChangeToggle(value: boolean) {\n  this.toggle.next(value);\n}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var s=t(96540);const i={},o=s.createContext(i);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);