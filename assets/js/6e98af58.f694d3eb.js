"use strict";(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[329],{78561:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>r});const t=JSON.parse('{"id":"advanced-css/colon-vs-double-colon-in-CSS3","title":"colon-vs-double-colon-in-CSS3","description":"\x3c!-- import Tabs from \'@theme/Tabs\';","source":"@site/docs/advanced-css/colon-vs-double-colon-in-CSS3.md","sourceDirName":"advanced-css","slug":"/advanced-css/colon-vs-double-colon-in-CSS3","permalink":"/wiki/docs/advanced-css/colon-vs-double-colon-in-CSS3","draft":false,"unlisted":false,"editUrl":"https://github.com/actionanand/wiki/docs/advanced-css/colon-vs-double-colon-in-CSS3.md","tags":[],"version":"current","sidebarPosition":14,"frontMatter":{"sidebar_position":14,"sidebar_label":": vs :: in CSS3"},"sidebar":"tutorialSidebar","previous":{"title":"Sassy CSS","permalink":"/wiki/docs/advanced-css/sassy-css"},"next":{"title":"Media Query","permalink":"/wiki/docs/advanced-css/media-query"}}');var i=s(74848),o=s(28453);const c={sidebar_position:14,sidebar_label:": vs :: in CSS3"},l=": vs :: in CSS3",d={},r=[{value:"The Difference",id:"the-difference",level:2},{value:"How to Use",id:"how-to-use",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"-vs--in-css3",children:": vs :: in CSS3"})}),"\n",(0,i.jsx)(n.h2,{id:"the-difference",children:"The Difference"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:":"})," precedes and identifies the state of an element while ",(0,i.jsx)(n.code,{children:"::"})," creates elements. The difference between ",(0,i.jsx)(n.code,{children:":"})," and ",(0,i.jsx)(n.code,{children:"::"})," is that the former describes the state of a selected element usually involving user interaction while the latter is used to create element(s) as a part of the selected element and/or used to target elements using the selected element as reference."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["It is important to note that ",(0,i.jsx)(n.code,{children:":"})," creates pseudo-classes, some examples are"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:":hover"})," - to style an element when user is on it without selecting ie hovers over an element"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:":active"})," - to style an element when clicked ie when element is active"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:":visited"})," - to style anchor tags (links) when a user has clicked on it."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:":focus"})," - to style an input field that user clicked on."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Some examples of pseudo-elements (created using ",(0,i.jsx)(n.code,{children:"::"}),") are:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"::before"})," - targets created element that precedes selected element"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"::after"})," - targets created element that succeeds selected element"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"::placeholder"})," - targets placeholder atrribute value"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"how-to-use",children:"How to Use"}),"\n",(0,i.jsxs)(n.p,{children:["A good rule of thumb is to only use ",(0,i.jsx)(n.code,{children:"::"})," when it is necessary as this got introduced with CSS3 meaning ",(0,i.jsx)(n.code,{children:":before"})," is valid CSS and compatible with older browsers that haven\u2019t fully adopted the changes introduced by CSS3. Following this rule makes your CSS backward-compatible."]}),"\n",(0,i.jsx)(n.p,{children:"It is also good practice to only use CSS-generated content when necessary as CSS-generated elements do not appear on the DOM and therefore cannot be parsed by accessibility tools."})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>l});var t=s(96540);const i={},o=t.createContext(i);function c(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);